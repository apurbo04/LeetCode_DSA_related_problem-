/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* removeElements(ListNode* head, int val) {
        if (head == NULL)
            return head;

        if(head == NULL) return head;
        while (head->val == val) {
            head = head->next;
            if (head == NULL)
                return head;
        }
        ListNode* tmp = head;
        while (tmp->next != NULL) {
            if (val == tmp->next->val) {
                ListNode* deleteNode = tmp->next;
                tmp->next = tmp->next->next;
                delete deleteNode;
            }
            if (tmp->next == NULL)
                break;
            else if (val != tmp->next->val) {
                tmp = tmp->next;
            }
        }
        return head;
    }
};
